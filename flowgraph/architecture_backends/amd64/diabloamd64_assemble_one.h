#include <diabloamd64.h>
#ifdef DIABLOAMD64_FUNCTIONS
#ifndef DIABLOAMD64_ASSEMBLE_ONE_FUNCTIONS
#define DIABLOAMD64_ASSEMBLE_ONE_FUNCTIONS
void Amd64OpAsNone(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAsReg(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAsST(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAsConst1(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAsA(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAsC(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAsD(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAsE(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAsF(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAsG(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAssI(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAsI(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAsJ(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAsM(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAsO(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAsO8(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAsR(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAsS(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAsX(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAsY(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAsV(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
void Amd64OpAsW(t_amd64_ins * ins, t_amd64_operand * op, t_amd64_bytemode bm, t_uint32 * mod_ret, t_uint32 * reg_ret, t_uint32 * rm_ret, t_uint32 * scale_ret, t_uint32 * index_ret, t_uint32 * base_ret, t_bool * has_sib_ret, t_uint64 *immediate_ret, t_uint32 * immedsz_ret, t_uint64 * displacement_ret, t_uint32 * dispsz_ret, t_uint32 * segsel_ret, t_bool * has_segsel_ret,char *rex);
#endif
#endif
